version: 2.1
commands:
  git_checkout_from_cache:
    description: "Git checkout and save cache"
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - run: 
          name: Fetch git tags 
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ== ' >> ~/.ssh/known_hosts
            # Fetch tags if git cache is present
            if [ -e /home/circleci/project/.git ]
            then
              git fetch origin --tags
            fi
      - checkout
      - run:
          name: Compress git objects 
          command: git gc
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
  hello-from-env:
    description: "Say hello"
    steps:
      - run:
          name: "Say hello"
          command: if [ "${VAR}" = "VAR_FROM_ENV" ]; then echo "ENV"; fi
  hello-from-context:
    description: "Say hello"
    steps:
      - run:
          name: "Say hello"
          command: if [ "${VARC}" = "VAR_FROM_CONTEXT" ]; then echo "CONTEXT"; fi
  hello-from-both:
    description: "Say hello"
    steps:
      - run:
          name: "Say hello"
          command: if [ "${VAR}" = "VAR_FROM_CONTEXT" ]; then echo "CONTEXT"; fi

jobs:
  from-env:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - checkout
      - hello-from-env
  from-context:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - checkout
      - hello-from-context
  from-both:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - checkout
      - hello-from-both
  tag-now:
    working_directory: /app
    docker:
      - image: alpine/git:v2.34.1
    steps:
      - git_checkout_from_cache
      - setup_remote_docker
      #- add_ssh_keys:
      #    fingerprints:
      #     - f2:9c:be:08:e5:fb:25:0e:70:ed:29:2f:8e:9a:21:bb
      #     - 8f:4c:c7:7d:53:7d:af:cc:ee:e5:e8:aa:50:a2:87:af
      - run:
          name: Setup name/mail, tag and push tag
          command: |
            ssh-add -l
            git config --global user.name "thibault-deriv"
            git config --global user.email "thibault@deriv.com"
            tag=`date +%s`
            git tag $tag 
            git push origin $tag
            

workflows:
  from-env:
    jobs:
      - from-env:
          filters:
            branches:
              only: /^main$/
  from-context:
    jobs:
      - from-context:
          filters:
            branches:
              only: /^main$/
          context: mycontext
  from-both:
    jobs:
      - from-both:
          filters:
            branches:
              only: /^main$/
          context: mycontext
  tag-now:
    jobs:
      - tag-now:
          filters:
            branches:
              only: /^main$/
